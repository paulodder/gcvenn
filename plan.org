#+BIND: org-export-use-babel nil
#+TITLE: Notes
#+AUTHOR: Paul Lodder
#+EMAIL: <paul_lodder@live.nl>
#+DATE: February 14, 2020
#+LaTeX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage[margin=0.8in]{geometry}
#+LATEX_HEADER_EXTRA:  \usepackage{mdframed}
#+LATEX_HEADER_EXTRA: \BeforeBeginEnvironment{minted}{\begin{mdframed}}
#+LATEX_HEADER_EXTRA: \AfterEndEnvironment{minted}{\end{mdframed}}
#+MACRO: NEWLINE @@latex:\\@@ @@html:<br>@@
#+PROPERTY: header-args :exports both :session insurer :cache :results value
#+OPTIONS: ^:nil
#+LATEX_COMPILER: pdflatexorg-mode restarted


* Meeting notes

Meeting 14/02/2020

Original email from philip
#+BEGIN_EXAMPLE
Hi Paul,

Ik heb die correspondentie met Jan gelezen en ik stel voor dat wij het volgende
bespreken morgen in orde om de meeting efficient te laten lopen:
1. Duidelijk stellen van de doelen, wat willen wij dat de webapp precies doet?
   High-level overview om een goed idee te hebben van wat de webapp doet en
   niet doet en zou moeten doen in de toekomst.
2. Input/Output data wat willen we erin stoppen en wat moet eruit?
3. Data bronnen:
welke? bewerkingen? pipelines?
4. Methodes: wat wil je met de data doen?
batch effects TDA andere transformaties?

en daarna:

hoe wil je het implementeren: client side computations, welke, etc file formats
bespreken andere architectural consideratiosn

5. Huidige progressie en duidelijke doelen stellen voor komende maand +
   mogelijk plan maken.

Is dat een goed plan?

Exciting allemaal, tot morgen! Ik hou je op de hoogte van mijn ETA.

Groeten,

Philip
#+END_EXAMPLE

** What?
   The objective is to let the user select any combination of tissues, and
   Let the user pick any number/combination of tissues, for which we show
   a expression.

   To precompute:\\
   For each tissue type, min/max/mean/ per geen

   for a particular tissue (which is derived from raw files)
   =gene_expression_for_<tissue>=
   | Gene    | min | max | avg |
   | ENSXXXX | 0.2 | 0.8 | 0.5 |
   | ENSXXXY | 0.3 | 1.2 | 0.4 |

   If user selects multiple tissues, backend computes desired measure of combined
   tissues based.

   e.g. take the min of the min.

   User can select ranges of expression for each histogram, after which the Venn
   diagram is updated.

   Histogram is the distribution of gene expression values.

   try transformation
** Data: I/O
   Input:
   + Data:  =gene_expression_for_<tissue>=
   + User:  combination of tissue and provenance, and choice of measure to be computed (e.g. min/max/avg).
   Output:
   + histogram per selection
   + interactive Venn diagram
   + option to download
   current selection

** Data sources
   Data needed:
   + TGCA data
   + GTEx data
   + other?

** Justification
*** Limitations of the methodology of Bruggeman et al.
    The crucial limitation of Bruggeman et al.'s paper is that they consider all
    GC genes instead of a specific set of genes. This has as consequence that
    only differences between cancer cells and normal tissue is considered. This
    tool will make the encounter of such caveats less likely by making clear to
    the user what is being compared through a visualization tool.

*** Pipeline requirements for comparing GTEx and TGCA data
    In order to justify why we want to compare GTEx and TGCA data without
    extensive compute power is that we think that since we care only about
    extreme values (i.e. very high or very low gene expression), we do not need
    to apply a pipeline that would be too intensive on the server side.

    We could apply the pipeline and check if our results (i.e. transformed data
    by the pipeline) are in line with what would happen if we don't apply the
    pipeline for every new selection.

    E.g. for every person with X-cancer and Y-tissue, and we check their expression data
    and see if it matches our results.
* Issues
** Gencode version compatibility
Possibly, the difference does not give any conflicts for the genes in GTEx and
TCGA.
TODO: check if this case.

** STAR
   Inspect if tcga vs. gtex different STAR versions are relevant to our purposes.

* tpm vs rpkm vs fpkm
  https://www.rna-seqblog.com/rpkm-fpkm-and-tpm-clearly-explained/

* GTEx settings
  Can be found [[https://gtexportal.org/home/documentationPage][here]].
  V8
  GENCODE v26
  Alignment to the human reference genome GRCh38/hg38 was performed using STAR
  v2.5.3a, based on the GENCODE v26 annotation.

* TCGA settings
  [[https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/Expression_mRNA_Pipeline/][overview of pipeline for rna-seq]]

* Sample UUIDS to tagname
  kijk hier naar:
  https://rdrr.io/bioc/TCGAutils/man/ID-translation.html

  https://docs.gdc.cancer.gov/Encyclopedia/pages/TCGA_Barcode/
  fff72b21-e71c-4858-ab4e-1f6c79e58e79

  https://tcga-data.nci.nih.gov/uuid/uuidws/mapping/xml/uuid/fff72b21-e71c-4858-ab4e-1f6c79e58e79


  26e791c1-3713-4993-b1b6-f28836f28179
  67c28a4b-ecb1-461b-le 846e-e797697c34bc.rna_seq.star_gene_counts.tsv.gz
  d94510399270dff7b3dfed7b31b09664 407919 released

* .env
Fill out values for =DATA_DIR= and =SRC_DIR= in =.env=, the values specified in
this file will be used by the script =get_data.sh= and others.

- DATA_DIR :: full path to directory where data will be stored
- SRC_DIR :: full path to directory where =gdc_client= will be installed

* UUID mapper
Set up https://code.google.com/archive/p/tcgauuid/

* get_data.sh
  Before running =get_data.sh=, make sure you are in your virtualenv for this project
